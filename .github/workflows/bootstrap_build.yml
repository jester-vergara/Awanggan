name: "Terraform Bootstrap"

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows the workflow to be triggered manually

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    name: Terraform Bootstrap

    permissions:
      id-token: write
      contents: read

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials with OIDC
      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_CONTROL_TOWER }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Install Terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform-wrapper: true
          cli-config-file: true
          cli-config-location: ~/.terraformrc

      # Validate Terraform configuration
      - name: Terraform Validate
        working-directory: ./aws/terraform/
        run: terraform validate

      # Lint Terraform files
      - name: Lint Terraform
        working-directory: ./aws/terraform/
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint

      # Initialize Terraform with Backend Config
      - name: Initialize Terraform
        working-directory: ./aws/terraform/
        run: |
          terraform init \
            -backend-config="bucket=${{ vars.S3_BUCKET }}" \
            -backend-config="key=terraform/state/${{ vars.CONTROL_TOWER_ENVIRONMENT }}/${{ vars.CONTROL_TOWER_ENVIRONMENT }}.tfstate" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ vars.DYNAMODB_TABLE }}" \
            -backend-config="encrypt=true" \
            -reconfigure

      # Create and Select Terraform Workspace
      - name: Create and Select Workspace
        working-directory: ./aws/terraform/
        run: |
          terraform workspace list | grep -q "control_tower" || terraform workspace new control_tower
          terraform workspace select control_tower

      # Terraform Plan
      - name: Terraform Plan
        working-directory: ./aws/terraform/
        run: terraform plan -var-file="control-tower.tfvars" -out=tfplan

      # Terraform Apply
      - name: Terraform Apply
        working-directory: ./aws/terraform/
        run: |
          echo "Applying tfplan to create bootstrap resources"
          terraform apply "tfplan"
