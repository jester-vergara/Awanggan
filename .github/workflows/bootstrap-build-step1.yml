name: "Bootstrap Build Step 1 - Create S3 and DynamoDB for Terraform State"

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering for terraform apply

jobs:
  setup-infra:
    runs-on: ubuntu-latest
    name: Setup S3 and DynamoDB for State Management

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        working-directory: ./aws/terraform/control-tower/s3  # Updated to correct directory
        run: terraform init -reconfigure

      - name: Check Terraform Formatting
        working-directory: ./aws/terraform/control-tower/s3  # Updated to correct directory
        run: terraform fmt -check -recursive

      - name: Validate Terraform
        working-directory: ./aws/terraform/control-tower/s3  # Updated to correct directory
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./aws/terraform/control-tower/s3  # Updated to correct directory
        run: terraform plan -var-file="../../terraform.tfvars" -out=tfplan

  apply:
    runs-on: ubuntu-latest
    name: Terraform Apply S3 and DynamoDB
    needs: setup-infra
    if: github.event_name == 'workflow_dispatch' # Only runs on manual trigger

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Apply Terraform Plan
        working-directory: ./aws/terraform/control-tower/s3  # Updated to correct directory
        run: |
          terraform init
          terraform apply -auto-approve "tfplan"
